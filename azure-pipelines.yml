trigger:
- main

pool:
  vmImage: 'windows-latest'   # Windows is safer for full .NET SDKs

steps:
# Install .NET 9 SDK explicitly
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '9.0.304'   # exact version from your machine
    includePreviewVersions: true
    installationPath: $(Agent.ToolsDirectory)/dotnet

# Ensure NuGet tooling is available
- task: NuGetToolInstaller@1

# Restore NuGet packages
- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: 'Backend/Backend.sln'

# Build solution
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'Backend/Backend.sln'
    arguments: '--configuration Release'

# Run XUnit tests and collect coverage
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'Backend/XUnitTests/*.csproj'
    arguments: '--configuration Release --no-build --collect:"XPlat Code Coverage"'
    publishTestResults: true
    
    
# Publish test results
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'xUnit'
    testResultsFiles: '**/TestResults/*.xml'
    failTaskOnFailedTests: true
  condition: succeededOrFailed()

# Publish coverage
- task: PublishCodeCoverageResults@2
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.cobertura.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**'
  condition: succeededOrFailed()
